// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL_TEST")
}

model User {
  id String @default(uuid()) @id

  email String @unique
  firstName String
  lastName String
  password String

  activities Activity[]
  items Item[]
  decisions Decision[]

  @@map("users")
    
}

model Activity {
  id String @default(uuid()) @id

  name String
  createdAt DateTime @default(now())
  status ActivityStatus @default(Pending)

  venue String?
  datePlanned DateTime?
  description String?
  location String?
  startTime DateTime?
  endTime DateTime?
  tag String?

  items Item[]
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  @@map("activities")

}

model Item {
  id String @default(uuid()) @id

  name String
  
  planned Boolean @default(true)
  completed Boolean @default(false)
  quantity Int @default(1)
  type ItemType @default(Product)

  price Float?
  tag String?
  description String?

  activity Activity? @relation(fields: [activityId], references: [id], onDelete: Cascade)
  activityId String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  @@map("items")

}

model Decision {
  id String @default(uuid()) @id

  name String
  description String?

  options Option[]
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

}

model Option {
  id String @default(uuid()) @id

  name String

  decision Decision @relation(fields: [decisionId], references: [id], onDelete: Cascade)
  decisionId String

  factors Factor[]
}

model Factor {
  id String @default(uuid()) @id

  name String

  option Option @relation(fields: [optionId], references: [id], onDelete: Cascade)
  optionId String
}


enum ItemType {
  Product
  Service
}

enum ActivityStatus {
  Pending
  Finished
  Active
}
